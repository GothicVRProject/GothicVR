name: GothicVR Build Jobs

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - 18-create-build-pipeline

jobs:
  buildForAllPlatforms:
    name: Build GothicVR for ${{ matrix.targetPlatform }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - runnerTag: self-hosted
            targetPlatform: StandaloneWindows64
            #customImage: Null
          - runnerTag: self-hosted
            targetPlatform: Android
            #customImage: 'thogsit/unitycifix:ubuntu-2022.2.1f1-android-1.0.1'
    runs-on: ${{ matrix.runnerTag }}
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      # Test (Currently disabled due to resource saving)
      #- name: Run tests
      #  uses: game-ci/unity-test-runner@v2
      #  env:
      #    UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      #  with:
      #    githubToken: ${{ secrets.GITHUB_TOKEN }}
      #    customImage: 'thogsit/unitycifix:ubuntu-2022.2.1f1-android-1.0.1'

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          #customImage: ${{ matrix.customImage }}
          targetPlatform: ${{ matrix.targetPlatform }}
          allowDirtyBuild: true
          buildMethod: UnityBuildTools.UnityBuilderAction.PerformBuild${{ matrix.targetPlatform }}

      # Output
      #- uses: actions/upload-artifact@v2
      #  with:
      #    name: Build-${{ matrix.targetPlatform }}
      #    path: ${{ matrix.targetPlatform }}/
      #    if-no-files-found: error
