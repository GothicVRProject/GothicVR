name: GothicVR Build Jobs

on:
  pull_request:
    branches:
      - main
    types: [opened, reopened, synchronize]
    
  push:
    branches:
      - main

jobs:

  #########
  # TESTS #
  #########
  Unit_Tests:
    name: Test in ${{ matrix.testMode }}
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - playmode
          - editmode
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
          fetch-depth: 0
          clean: true
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}
          restore-keys: |
            Library-
      - uses: game-ci/unity-test-runner@v2
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }}
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Coverage results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.coveragePath }}

  #########
  # BUILD #
  #########

  buildForAllPlatforms:
    name: Build GothicVR for ${{ matrix.targetDevice }}
    needs: Unit_Tests
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        include:
          - targetPlatform: StandaloneWindows64
            targetDevice: Windows64
          - targetPlatform: Android
            targetDevice: Pico
          - targetPlatform: Android
            targetDevice: Quest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
          fetch-depth: 0
          clean: true

      # Cache
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          allowDirtyBuild: true
          buildMethod: UnityBuildTools.UnityBuilderAction.Perform${{ matrix.targetDevice }}Build

      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetDevice }}
          path: build/${{ matrix.targetDevice }}
          expire-in: 2 days

      #- name: Create Target Directory & copy Build
      #  run: |
      #    mkdir -p /builds/PullRequests/${{ github.event.pull_request.number }}:${{ github.event.pull_request.head.ref }}/${{ matrix.targetDevice }}
      #    rsync -arctuxz --remove-source-files /tmp/build/${{ matrix.targetDevice }} /builds/PullRequests/${{ github.event.pull_request.number }}:${{ github.event.pull_request.head.ref }}/${{ matrix.targetDevice }}/

